#!/usr/bin/env php
<?php

define('LARAVEL_START', microtime(true));


if (file_exists($a = __DIR__.'/../../../autoload.php')) {
    $baseDir = __DIR__.'/../../../../';
    require_once $a;
} else {
    $baseDir = __DIR__.'/../tests/dummy';
    require_once __DIR__.'/../vendor/autoload.php';
}

Patchwork\Utf8\Bootup::initMbstring();
Illuminate\Support\ClassLoader::register();

/*
|--------------------------------------------------------------------------
| Turn On The Lights
|--------------------------------------------------------------------------
|
| We need to illuminate PHP development, so let's turn on the lights.
| This bootstraps the framework and gets it ready for and then it
| will load up this application so that we can run it and send
| the responses back to the browser and delight these users.
|
*/

$app = new \Subbly\Framework\Application();
$app->setRootDirectory($baseDir);
$app->setConfigDirectory($baseDir.'/config/');
$app->start();

/*
|--------------------------------------------------------------------------
| Load The Artisan Console Application
|--------------------------------------------------------------------------
|
| We'll need to run the script to load and return the Artisan console
| application. We keep this in its own script so that we will load
| the console application independent of running commands which
| will allow us to fire commands from Routes when we want to.
|
*/

$app->setRequestForConsoleEnvironment();

$artisan = Illuminate\Console\Application::start($app);

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$status = $artisan->run();

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running. We will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$app->shutdown();

exit($status);
